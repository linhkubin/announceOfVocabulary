/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Subjects;
import Model.Words;
import static View.Login.StopPoint;
import static View.Login.listSubject;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UnsupportedLookAndFeelException;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;

/**
 *
 * @author linh
 */
public class ViewWords extends javax.swing.JFrame {

    /**
     * Creates new form View
     * Words
     */
    public static int count = 0;
    int delayTime = Login.options.getDelayTime()*1000;
    int numberOfWord = Login.options.getNumberOfWords();
    Timer timer;
    
    public ViewWords() {
        
        
        
        initComponents();
        _initBase();
                   
       
       timer = new Timer(delayTime, new ActionListener(){
           public void actionPerformed(ActionEvent ae){
               
               if (count == numberOfWord) {
                   timer.stop();
                   _backToMain();
               }
               
               _initBase();           
//               initComponents();
               count++;
               System.out.println("--"+count);  
               
               
               
           }
       });
            
      // timer.setDelay(3000);
       timer.start();
 
    }
    
    
    void _initBase(){
        ArrayList<Words> list = new ArrayList<>();
        //init random
        Random rd = new Random();
        int rdSubjects = rd.nextInt(StopPoint+1); //random tu - den diem dung
        list = listSubject.get(rdSubjects).listWords;
        int rdWords = rd.nextInt(list.size());//random tu 0 den so phan tu trong subject dc random
        subject.setText(listSubject.get(rdSubjects).getName());
        //set thuoc tinh
        word.setText(list.get(rdWords).getWord());
        prononciation.setText(list.get(rdWords).getPrononciation());
        mean.setText(list.get(rdWords).getMean());
        category.setText(list.get(rdWords).getCategory());
        examp.setText(list.get(rdWords).getExample());
        meanExamp.setText(list.get(rdWords).getMeanExample());
        //icon
        System.out.println("/Resource/"+listSubject.get(rdSubjects).getName()+"/"+list.get(rdWords).getWord()+".jpg");
        iconWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/"+listSubject.get(rdSubjects).getName()+"/"+list.get(rdWords).getWord()+".jpg")));
      
        //sound
        _sound(listSubject.get(rdSubjects).getName(),list.get(rdWords).getWord());
    }
    
    void _sound(String sub, String word){
        try {
        Player pla = new  Player(new FileInputStream("src//Resource//"+sub+"/"+word+".mp3"));
        pla.play();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "error!");
        } catch (JavaLayerException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void _nextWords(){
        super.dispose();
        ViewWords vm = new ViewWords();
        vm.setVisible(true);
        vm.setLocationRelativeTo(null);
    }
    
    
    
    void _repaint(){
         jPanel1.removeAll();
         jPanel1.add(cover);
         jPanel1.repaint();
         jPanel1.validate();
    }
    
    void _backToMain(){
        super.dispose();
        ViewMain vm = new ViewMain();
        vm.setVisible(true);
        vm.setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cover = new javax.swing.JPanel();
        subject = new javax.swing.JLabel();
        iconWord = new javax.swing.JLabel();
        word = new javax.swing.JLabel();
        prononciation = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        mean = new javax.swing.JLabel();
        category = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        meanExamp = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        examp = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cover.setBackground(new java.awt.Color(255, 255, 255));
        cover.setEnabled(false);
        cover.setFocusable(false);
        cover.setMaximumSize(new java.awt.Dimension(700, 270));
        cover.setMinimumSize(new java.awt.Dimension(700, 270));
        cover.setPreferredSize(new java.awt.Dimension(720, 270));

        subject.setFont(new java.awt.Font("Goudy Old Style", 0, 36)); // NOI18N
        subject.setText("sub");

        iconWord.setText("image");
        iconWord.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        iconWord.setMaximumSize(new java.awt.Dimension(200, 130));

        word.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        word.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        word.setText("word");
        word.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        prononciation.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        prononciation.setForeground(new java.awt.Color(255, 102, 102));
        prononciation.setText("/phát âm/");
        prononciation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Mark");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sound");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        mean.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mean.setText("mean");
        mean.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        category.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        category.setText("category");
        category.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        meanExamp.setEditable(false);
        meanExamp.setColumns(20);
        meanExamp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        meanExamp.setLineWrap(true);
        meanExamp.setRows(5);
        meanExamp.setAutoscrolls(false);
        meanExamp.setBorder(null);
        jScrollPane1.setViewportView(meanExamp);
        meanExamp.getAccessibleContext().setAccessibleParent(cover);

        jScrollPane2.setBackground(java.awt.Color.white);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setWheelScrollingEnabled(false);

        examp.setEditable(false);
        examp.setColumns(20);
        examp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        examp.setLineWrap(true);
        examp.setRows(5);
        examp.setAutoscrolls(false);
        examp.setBorder(null);
        examp.setFocusable(false);
        examp.setPreferredSize(new java.awt.Dimension(360, 100));
        examp.setRequestFocusEnabled(false);
        examp.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(examp);
        examp.getAccessibleContext().setAccessibleParent(cover);

        javax.swing.GroupLayout coverLayout = new javax.swing.GroupLayout(cover);
        cover.setLayout(coverLayout);
        coverLayout.setHorizontalGroup(
            coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coverLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(coverLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(iconWord, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coverLayout.createSequentialGroup()
                        .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prononciation, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mean, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        coverLayout.setVerticalGroup(
            coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coverLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prononciation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coverLayout.createSequentialGroup()
                        .addComponent(mean, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(coverLayout.createSequentialGroup()
                        .addComponent(iconWord, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(coverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        _nextWords();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        _sound(subject.getText(), word.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewWords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ViewWords.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewWords().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel category;
    private javax.swing.JPanel cover;
    private javax.swing.JTextArea examp;
    private javax.swing.JLabel iconWord;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel mean;
    private javax.swing.JTextArea meanExamp;
    private javax.swing.JLabel prononciation;
    private javax.swing.JLabel subject;
    private javax.swing.JLabel word;
    // End of variables declaration//GEN-END:variables
}
